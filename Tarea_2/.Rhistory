model_logit <- glm(CHURN ~ .,
data = data2[2:ncol(data2)],
family = binomial)
summary(model_logit)
data2 <- data %>%
filter(DESC_MOVIMIENTO_ACCF == 'Churn Voluntario' | DESC_MOVIMIENTO_ACCF == 'No Churn') %>%
select(-c(TIPO_TRABAJO, RESOLUCION_ANULADO,
`RESOLUCION_EN CURSO`, RESOLUCION_NA, RESOLUCION_RECHAZADO,
ESPERA_COM_PROM, ESPERA_TEC_PROM, MONTO,
DESC_MOVIMIENTO_ACCF))
model_logit <- glm(CHURN ~ .,
data = data2[2:ncol(data2)],
family = binomial)
summary(model_logit)
data2 <- data %>%
filter(DESC_MOVIMIENTO_ACCF == 'Churn Voluntario' | DESC_MOVIMIENTO_ACCF == 'No Churn') %>%
select(-c(TIPO_TRABAJO, RESOLUCION_ANULADO,
`RESOLUCION_EN CURSO`, RESOLUCION_NA, RESOLUCION_RECHAZADO,
ESPERA_COM_PROM, ESPERA_TEC_PROM, MONTO, SEGMENTO,
DESC_MOVIMIENTO_ACCF))
model_logit <- glm(CHURN ~ .,
data = data2[2:ncol(data2)],
family = binomial)
summary(model_logit)
data2 <- data %>%
filter(DESC_MOVIMIENTO_ACCF == 'Churn Voluntario' | DESC_MOVIMIENTO_ACCF == 'No Churn') %>%
select(-c(TIPO_TRABAJO, RESOLUCION_ANULADO,
`RESOLUCION_EN CURSO`, RESOLUCION_NA, RESOLUCION_RECHAZADO,
ESPERA_COM_PROM, ESPERA_TEC_PROM, MONTO, SEGMENTO,
DESC_MOVIMIENTO_ACCF, RESOLUCION_APROBADO))
model_logit <- glm(CHURN ~ .,
data = data2[2:ncol(data2)],
family = binomial)
summary(model_logit)
data[c("ESPERA_COM")][is.na(data[c("ESPERA_COM")])] <- 0
data[c("ESPERA_TEC")][is.na(data[c("ESPERA_TEC")])] <- 0
data2 <- data %>%
filter(DESC_MOVIMIENTO_ACCF == 'Churn Voluntario' | DESC_MOVIMIENTO_ACCF == 'No Churn') %>%
select(-c(TIPO_TRABAJO, RESOLUCION_ANULADO,
`RESOLUCION_EN CURSO`, RESOLUCION_NA, RESOLUCION_RECHAZADO,
ESPERA_COM_PROM, ESPERA_TEC_PROM, MONTO, SEGMENTO,
DESC_MOVIMIENTO_ACCF, RESOLUCION_APROBADO, ESPER))
data2 <- data %>%
filter(DESC_MOVIMIENTO_ACCF == 'Churn Voluntario' | DESC_MOVIMIENTO_ACCF == 'No Churn') %>%
select(-c(TIPO_TRABAJO, RESOLUCION_ANULADO,
`RESOLUCION_EN CURSO`, RESOLUCION_NA, RESOLUCION_RECHAZADO,
ESPERA_COM_PROM, ESPERA_TEC_PROM, MONTO, SEGMENTO,
DESC_MOVIMIENTO_ACCF, RESOLUCION_APROBADO))
model_logit <- glm(CHURN ~ .,
data = data2[2:ncol(data2)],
family = binomial)
summary(model_logit)
data2 <- data %>%
filter(DESC_MOVIMIENTO_ACCF == 'Churn Voluntario' | DESC_MOVIMIENTO_ACCF == 'No Churn') %>%
select(-c(TIPO_TRABAJO, RESOLUCION_ANULADO,
`RESOLUCION_EN CURSO`, RESOLUCION_NA, RESOLUCION_RECHAZADO,
ESPERA_COM_PROM, ESPERA_TEC_PROM, MONTO, SEGMENTO,
DESC_MOVIMIENTO_ACCF, RESOLUCION_APROBADO, ESPERA_COM,
ESPERA_TEC))
summary(model_logit)
knitr::opts_chunk$set(echo = FALSE)
#Importar datos
library(data.table)
#Manejar datos
library(dplyr)
library(tidyr)
library(reshape2)
library(matrixStats)
library(zoo)
#Graficos y diseño
library(ggplot2)
library(extrafont)
library(scales)
library(shadowtext)
library(plotly)
#Tablas
library(sjPlot)
font_import()
loadfonts(device = "win")
variacion_mensual <- function(data_t0, data_t1, fecha_corte){
data_t0$Fecha <- as.Date(data_t0$Fecha, format='%Y-%m-%d')
data_t1$Fecha <- as.Date(data_t1$Fecha, format='%Y-%m-%d')
#Calculamos el precio promedio por cada producto (Modelo) del mes t=0
t_0 <- data_t0 %>%
filter(Fecha <= fecha_corte) %>%
group_by(Modelo) %>%
summarise(t_0 = mean(Precio.Normal))
#Calculamos el precio promedio por cada producto (Modelo) por dia del mes t=1
t_1 <- data_t1 %>%
select(Modelo, Fecha, Tienda, Precio.Normal) %>%
group_by(Modelo, Fecha) %>%
summarise(Precio = mean(Precio.Normal)) %>%
spread(Fecha, Precio)
#Nos quedamos solo con aquellos productos de t=1 que están en t=0
data <- merge(t_0, t_1)
#Calculamos la variación porcentual
data[3:ncol(data)] <- ((data[3:ncol(data)] / data$t_0) - 1)*100
#Vector de fechas
Fecha <- colnames(data[3:ncol(data)])
Fecha <- as.Date(Fecha, format='%Y-%m-%d')
#Transpuesta
data_t <- t(data[3:ncol(data)])
#Media "acumulada"
data_t2 <- rollapply(data_t, 100, mean, na.rm = TRUE, fill = NA,
align = 'right', partial = TRUE)
Promedio_Acum <- rowMeans(data_t2, na.rm = TRUE)
#Desv_Acum <- rowSds(data_t2, na.rm = TRUE)
#Media diaria
Promedio <- rowMeans(data_t, na.rm = TRUE)
#Desv <- rowSds(data_t, na.rm = TRUE)
#A dataframe
variaciones <- data.frame(Fecha, Promedio, Promedio_Acum)
return(variaciones)
}
var_tienda <- function(tienda, data_t0, data_t1, fecha_corte){
data_t0 <- data_t0 %>%
filter(Tienda == tienda)
data_t1 <- data_t1 %>%
filter(Tienda == tienda)
var <- variacion_mensual(data_t0, data_t1, fecha_corte)
return(var)
}
var_total <- function(tiendas, data_t0, data_t1, fecha_corte){
ndias <- length(unique(data_t1$Fecha))
ntiendas <- length(tiendas)
m_diaria <- setNames(data.frame(matrix(ncol = 1, nrow = ndias)),
c('Fecha'))
m_diaria$Fecha <- unique(data_t1$Fecha)
m_diaria$Fecha <- as.Date(m_diaria$Fecha, format='%Y-%m-%d')
m_acum <- setNames(data.frame(matrix(ncol = 1, nrow = ndias)),
c('Fecha'))
m_acum$Fecha <- unique(data_t1$Fecha)
m_acum$Fecha <- as.Date(m_acum$Fecha, format='%Y-%m-%d')
for(i in c(1:ntiendas)){
nombre <- tiendas[i]
data <- var_tienda(nombre, data_t0, data_t1, fecha_corte)
m_diaria <- data %>%
select(Fecha, Promedio) %>%
right_join(m_diaria, by = "Fecha") %>%
rename(!!nombre := Promedio)
m_acum <- data %>%
select(Fecha, Promedio_Acum) %>%
right_join(m_acum, by = "Fecha") %>%
rename(!!nombre := Promedio_Acum)
}
m_diaria$Promedio <- rowMeans(m_diaria[2:ncol(m_diaria)], na.rm = TRUE)
m_acum$Promedio <- rowMeans(m_acum[2:ncol(m_acum)], na.rm = TRUE)
descr <- c(tiendas, 'Promedio')
m_diaria <- melt(m_diaria, id.vars = c("Fecha"),
measure.vars = descr,
variable.name = "Descr",
value.name = "mean")
m_acum <- melt(m_acum, id.vars = c("Fecha"),
measure.vars = descr,
variable.name = "Descr",
value.name = "mean")
return(list(m_diaria, m_acum))
}
fecha_corte = '2021-04-25'
pal <- setNames(c("chartreuse3", "cyan3", "gray28", 'blue3', 'red3', 'darkorchid3'),
c('Falabella', 'Paris', 'Ripley', 'Hites', 'La Polar', 'Promedio'))
data_1 <- read.csv('C:/Users/Felipe/Google Drive/IPC Bienes/Consolidados/TV/Scrapers/Abril-2021.csv')
data_2 <- read.csv('C:/Users/Felipe/Google Drive/IPC Bienes/Consolidados/TV/Scrapers/Mayo-2021.csv')
fig <- plot_ly(rbind(data_1, data_2), x=~Fecha, y = Precio_Normal)
View(data_1)
fig <- plot_ly(rbind(data_1, data_2), x=~Fecha, y = Precio.Normal, color = Modelo)
data <- rbind(data_1, data_2)
View(data)
fig <- plot_ly(data, x=~Fecha, y = ~Precio.Normal, color = Modelo)
fig <- plot_ly(data, x=~Fecha, y = ~Precio.Normal, color = ~Modelo)
fig
data %>%
filter(LED == 'LED', Precio.Normal <= 600000) %>%
plot_ly(., x=~Fecha, y = ~Precio.Normal, color = ~Modelo)
data %>%
filter(LED == 'LED', Precio.Normal <= 600000) %>%
group_by(Marca, Modelo) %>%
summarise(Precio.Normal = mean(Precio.Normal)) %>%
plot_ly(., x=~Fecha, y = ~Precio.Normal, color = ~Modelo)
data %>%
filter(LED == 'LED', Precio.Normal <= 600000) %>%
group_by(Marca, Modelo, Fecha) %>%
summarise(Precio.Normal = mean(Precio.Normal)) %>%
plot_ly(., x=~Fecha, y = ~Precio.Normal, color = ~Modelo)
data %>%
filter(LED == 'LED', Precio.Normal <= 600000) %>%
group_by(Marca, Modelo, Fecha) %>%
summarise(Precio.Normal = mean(Precio.Normal)) %>%
plot_ly(., x=~Fecha, y = ~Precio.Normal, color = ~Modelo)%>%
add_trace(showscale = FALSE)
data %>%
filter(LED == 'LED', Precio.Normal <= 600000) %>%
group_by(Marca, Modelo, Fecha) %>%
summarise(Precio.Normal = mean(Precio.Normal)) %>%
plot_ly(., x=~Fecha, y = ~Precio.Normal, color = ~Modelo)%>%
layout(showlegend = FALSE)
data %>%
filter(Tienda %isin% tiendas) %>%
group_by(Fecha, Pulgadas, Resolucion) %>%
summarise(Precio.Normal = mean(Precio.Normal)) %>%
plot_ly(., x=~Fecha, y = ~Precio.Normal, color = ~Modelo)%>%
layout(showlegend = FALSE)
data %>%
filter(Tienda %is in% tiendas) %>%
group_by(Fecha, Pulgadas, Resolucion) %>%
summarise(Precio.Normal = mean(Precio.Normal)) %>%
plot_ly(., x=~Fecha, y = ~Precio.Normal, color = ~Modelo)%>%
layout(showlegend = FALSE)
data %>%
filter(Tienda %in% tiendas) %>%
group_by(Fecha, Pulgadas, Resolucion) %>%
summarise(Precio.Normal = mean(Precio.Normal)) %>%
plot_ly(., x=~Fecha, y = ~Precio.Normal, color = ~Modelo)%>%
layout(showlegend = FALSE)
tiendas = c('Falabella', 'Paris', 'Ripley', 'Hites', 'La Polar')
data %>%
filter(Tienda %in% tiendas) %>%
group_by(Fecha, Pulgadas, Resolucion) %>%
summarise(Precio.Normal = mean(Precio.Normal)) %>%
plot_ly(., x=~Fecha, y = ~Precio.Normal, color = ~Modelo)%>%
layout(showlegend = FALSE)
data %>%
filter(Tienda %in% tiendas) %>%
group_by(Fecha, Pulgadas, Resolucion) %>%
summarise(Precio.Normal = mean(Precio.Normal),
Grupo = paste(Pulgadas, Resolucion)) %>%
plot_ly(., x=~Fecha, y = ~Precio.Normal)%>%
layout(showlegend = FALSE)
data %>%
filter(Tienda %in% tiendas) %>%
group_by(Fecha, Pulgadas, Resolucion) %>%
summarise(Precio.Normal = mean(Precio.Normal),
Grupo = paste(Pulgadas, Resolucion)) %>%
plot_ly(., x=~Fecha, y = ~Precio.Normal, type = 'scatter')%>%
layout(showlegend = FALSE)
data %>%
filter(Tienda %in% tiendas) %>%
group_by(Fecha, Pulgadas, Resolucion) %>%
summarise(Precio.Normal = mean(Precio.Normal),
Grupo = paste(Pulgadas, Resolucion)) %>%
plot_ly(., x=~Fecha, y = ~Precio.Normal, type = 'line')%>%
layout(showlegend = FALSE)
data %>%
filter(Tienda %in% tiendas) %>%
group_by(Fecha, Pulgadas, Resolucion) %>%
summarise(Precio.Normal = mean(Precio.Normal),
Grupo = paste(Pulgadas, Resolucion)) %>%
plot_ly(., x=~Fecha, y = ~Precio.Normal,
type = 'scatter', mode = 'lines')%>%
layout(showlegend = FALSE)
data %>%
filter(Tienda %in% tiendas) %>%
group_by(Fecha, Pulgadas, Resolucion) %>%
summarise(Precio.Normal = mean(Precio.Normal),
Grupo = paste(Pulgadas, Resolucion)) %>%
plot_ly(., x=~Fecha, y = ~Precio.Normal, color = ~Grupo,
type = 'scatter', mode = 'lines')%>%
layout(showlegend = FALSE)
data %>%
filter(Tienda %in% tiendas) %>%
group_by(Fecha, Pulgadas, Resolucion) %>%
mutate(Grupo = paste(Pulgadas, Resolucion)) %>%
summarise(Precio_Normal = mean(Precio.Normal)) %>%
plot_ly(., x=~Fecha, y = ~Precio_Normal, color = ~Grupo,
type = 'scatter', mode = 'lines')%>%
layout(showlegend = FALSE)
group_by(Fecha, Grupo) %>%
summarise(Precio_Normal = mean(Precio.Normal)) %>%
plot_ly(., x=~Fecha, y = ~Precio_Normal, color = ~Grupo,
type = 'scatter', mode = 'lines')%>%
layout(showlegend = FALSE)
data %>%
filter(Tienda %in% tiendas) %>%
mutate(Grupo = paste(Pulgadas, Resolucion)) %>%
group_by(Fecha, Grupo) %>%
summarise(Precio_Normal = mean(Precio.Normal)) %>%
plot_ly(., x=~Fecha, y = ~Precio_Normal, color = ~Grupo,
type = 'scatter', mode = 'lines')%>%
layout(showlegend = FALSE)
data2 <- data %>%
filter(Tienda %in% tiendas) %>%
mutate(Grupo = paste(Pulgadas, Resolucion)) %>%
group_by(Fecha, Grupo) %>%
summarise(Precio_Normal = mean(Precio.Normal))
View(data2)
fig <- plot_ly(data2, x=~Fecha, y = ~Precio_Normal, color = ~Grupo,
type = 'scatter', mode = 'lines')%>%
layout(showlegend = FALSE)
fig
fig <- plot_ly(data2, x=~Fecha, y = ~Precio_Normal, color = ~Grupo,
type = 'scatter', mode = 'lines')
fig
fig <- plot_ly(data2, x=~Fecha, y = ~Precio_Normal,
type = 'scatter', mode = 'lines')
fig
ggplot(data2, aes(x=Fecha, y = Precio_Normal, color=Grupo))+
geom_line()
ggplot(data2, aes(x=Fecha, y = Precio_Normal, group=Grupo))+
geom_line()
ggplot(data2, aes(x=Fecha, y = Precio_Normal, group=Grupo))+
geom_line(color = Grupo)
ggplot(data2, aes(x=Fecha, y = Precio_Normal, group=Grupo, color = Grupo))+
geom_line()
data2 <- data %>%
filter(Tienda %in% tiendas) %>%
mutate(Grupo = paste(Pulgadas, Resolucion)) %>%
group_by(Fecha, Grupo) %>%
summarise(Precio_Normal = mean(Precio.Normal)) %>%
filter(Precio_Normal <= 1000000)
ggplot(data2, aes(x=Fecha, y = Precio_Normal, group=Grupo, color = Grupo))+
geom_line()
data2 <- data %>%
filter(Tienda %in% tiendas) %>%
mutate(Grupo = paste(Pulgadas, Resolucion)) %>%
group_by(Fecha, Grupo) %>%
summarise(Precio_Normal = mean(Precio.Normal)) %>%
filter(Precio_Normal <= 900000)
ggplot(data2, aes(x=Fecha, y = Precio_Normal, group=Grupo, color = Grupo))+
geom_line()
data2 <- data %>%
filter(Tienda %in% tiendas) %>%
mutate(Grupo = paste(Pulgadas, Resolucion)) %>%
group_by(Fecha, Grupo) %>%
summarise(Precio_Normal = mean(Precio.Normal)/1000) %>%
filter(Precio_Normal <= 900000)
data2 <- data %>%
filter(Tienda %in% tiendas) %>%
mutate(Grupo = paste(Pulgadas, Resolucion)) %>%
group_by(Fecha, Grupo) %>%
summarise(Precio_Normal = mean(Precio.Normal)/1000) %>%
filter(Precio_Normal <= 900)
ggplot(data2, aes(x=Fecha, y = Precio_Normal, group=Grupo, color = Grupo))+
geom_line()
ggplot(data2, aes(x=Fecha, y = Precio_Normal, group=Grupo, color = Grupo))+
geom_line()+
labs()+
theme(legend.position="bottom")
data2 <- data %>%
filter(Tienda %in% tiendas) %>%
mutate(Grupo = paste(Pulgadas, Resolucion)) %>%
group_by(Fecha, Grupo) %>%
summarise(Promedio = mean(Precio.Normal)/1000,
Mediana = median(Precio.Normal)/1000) %>%
filter(Precio_Normal <= 900)
data2 <- data %>%
filter(Tienda %in% tiendas) %>%
mutate(Grupo = paste(Pulgadas, Resolucion)) %>%
group_by(Fecha, Grupo) %>%
summarise(Promedio = mean(Precio.Normal)/1000,
Mediana = median(Precio.Normal)/1000) %>%
filter(Promedio <= 900)
data2 <- reshape(data2, direction = 'long', varying = c(Promedio, Mediana))
data2 <- reshape(data2, direction = 'long', varying = c('Promedio', 'Mediana'))
data2 <- data %>%
filter(Tienda %in% tiendas) %>%
mutate(Grupo = paste(Pulgadas, Resolucion)) %>%
group_by(Fecha, Grupo) %>%
summarise(Promedio = mean(Precio.Normal)/1000,
Mediana = median(Precio.Normal)/1000) %>%
melt(id=c("Fecha","Grupo"))
ggplot(data2, aes(x=Fecha, y = Precio_Normal, group=Grupo, color = Grupo))+
geom_line()+
labs()+
facet_grid(variable ~ .) +
theme(legend.position="bottom")
ggplot(data2, aes(x=Fecha, y = value, group=Grupo, color = Grupo))+
geom_line()+
labs()+
facet_grid(variable ~ .) +
theme(legend.position="bottom")
```{r, dpi=120}
data <- rbind(data_1, data_2)
data2 <- data %>%
filter(Tienda %in% tiendas) %>%
mutate(Grupo = paste(Pulgadas, Resolucion)) %>%
group_by(Fecha, Grupo) %>%
summarise(Promedio = mean(Precio.Normal)/1000,
Mediana = median(Precio.Normal)/1000) %>%
melt(id=c("Fecha","Grupo"))
ggplot(data2, aes(x=Fecha, y = value, group=Grupo, color = Grupo))+
geom_line()+
labs()+
facet_grid(variable ~ .) +
theme(legend.position="bottom")
```{r, dpi=120, height = 12}
data <- rbind(data_1, data_2)
data2 <- data %>%
filter(Tienda %in% tiendas) %>%
mutate(Grupo = paste(Pulgadas, Resolucion)) %>%
group_by(Fecha, Grupo) %>%
summarise(Promedio = mean(Precio.Normal)/1000,
Mediana = median(Precio.Normal)/1000) %>%
melt(id=c("Fecha","Grupo"))
ggplot(data2, aes(x=Fecha, y = value, group=Grupo, color = Grupo))+
geom_line()+
labs()+
facet_grid(variable ~ .) +
theme(legend.position="bottom")
ggplot(data2, aes(x=Fecha, y = value, group=Grupo, color = Grupo))+
geom_line()+
labs()+
facet_grid(variable ~ .) +
theme(legend.position="bottom")+
scale_x_date(labels = date_format("%d-%b"))
data <- rbind(data_1, data_2)
data2 <- data %>%
filter(Tienda %in% tiendas) %>%
mutate(Grupo = paste(Pulgadas, Resolucion),
Fecha = as.Date(Fecha, format='%Y-%m-%d')) %>%
group_by(Fecha, Grupo) %>%
summarise(Promedio = mean(Precio.Normal)/1000,
Mediana = median(Precio.Normal)/1000) %>%
melt(id=c("Fecha","Grupo"))
ggplot(data2, aes(x=Fecha, y = value, group=Grupo, color = Grupo))+
geom_line()+
labs()+
facet_grid(variable ~ .) +
theme(legend.position="bottom")+
scale_x_date(labels = date_format("%d-%b"))
data <- rbind(data_1, data_2)
data2 <- data %>%
filter(Tienda %in% tiendas) %>%
mutate(Grupo = paste(Pulgadas, Resolucion),
Fecha = as.Date(Fecha, format='%Y-%m-%d')) %>%
group_by(Fecha, Grupo) %>%
summarise(Promedio = mean(Precio.Normal)/1000,
Mediana = median(Precio.Normal)/1000) %>%
melt(id=c("Fecha","Grupo"))
ggplot(data2, aes(x=Fecha, y = value, group=Grupo, color = Grupo))+
geom_line()+
labs()+
facet_grid(variable ~ .) +
theme(legend.position="bottom")+
scale_x_date(labels = date_format("%d-%b"))
data <- rbind(data_1, data_2)
data2 <- data %>%
filter(Tienda %in% tiendas) %>%
mutate(Grupo = paste(Pulgadas, Resolucion),
Fecha = as.Date(Fecha, format='%Y-%m-%d')) %>%
group_by(Fecha, Grupo) %>%
summarise(Promedio = mean(Precio.Normal)/1000,
Mediana = median(Precio.Normal)/1000) %>%
melt(id=c("Fecha","Grupo"))
ggplot(data2, aes(x=Fecha, y = value, group=Grupo, color = Grupo))+
geom_line()+
labs()+
facet_grid(variable ~ .) +
theme(legend.position="bottom")+
scale_x_date(labels = date_format("%d-%b"))
ggplot(data2, aes(x=Fecha, y = value, group=Grupo, color = Grupo))+
geom_line()+
labs()+
facet_grid(variable ~ .) +
theme(legend.position="bottom", legend)+
scale_x_date(labels = date_format("%d-%b"))+
scale_y_continuous(labels = unit_format(unit = "K", scale = 1e-3))+
guides(fill=guide_legend(ncol =2,bycol=TRUE))
ggplot(data2, aes(x=Fecha, y = value, group=Grupo, color = Grupo))+
geom_line()+
labs()+
facet_grid(variable ~ .) +
theme(legend.position="bottom", legend)+
scale_x_date(labels = date_format("%d-%b"))+
scale_y_continuous(labels = unit_format(unit = "K", scale = 1e-3))+
guides(fill=guide_legend(ncol =2,bycol=TRUE))
ggplot(data2, aes(x=Fecha, y = value, group=Grupo, color = Grupo))+
geom_line()+
labs()+
facet_grid(variable ~ .) +
theme(legend.position="bottom", legend)+
scale_x_date(labels = date_format("%d-%b"))+
scale_y_continuous(labels = unit_format(unit = "K", scale = 1e-3))+
guides(fill=guide_legend(ncol =2))
ggplot(data2, aes(x=Fecha, y = value, group=Grupo, color = Grupo))+
geom_line()+
labs()+
facet_grid(variable ~ .) +
theme(legend.position="bottom", legend)+
scale_x_date(labels = date_format("%d-%b"))+
scale_y_continuous(labels = unit_format(unit = "K", scale = 1e-3))+
guide_legend(ncol=2)
ggplot(data2, aes(x=Fecha, y = value, group=Grupo, color = Grupo))+
geom_line()+
labs()+
facet_grid(variable ~ .) +
theme(legend.position="bottom", legend)+
scale_x_date(labels = date_format("%d-%b"))+
scale_y_continuous(labels = unit_format(unit = "K", scale = 1e-3))+
guides(fill=guide_legend(ncol=2))
ggplot(data2, aes(x=Fecha, y = value, group=Grupo, color = Grupo))+
geom_line()+
labs()+
facet_grid(variable ~ .) +
theme(legend.position="bottom")+
scale_x_date(labels = date_format("%d-%b"))+
scale_y_continuous(labels = unit_format(unit = "K", scale = 1e-3))+
guides(fill=guide_legend(ncol=2))
ggplot(data2, aes(x=Fecha, y = value, group=Grupo, color = Grupo))+
geom_line()+
labs()+
facet_grid(variable ~ .) +
theme(legend.position="bottom")+
scale_x_date(labels = date_format("%d-%b"))+
scale_y_continuous(labels = unit_format(unit = "K", scale = 1e-3))+
guides(color=guide_legend(ncol=2))
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(dplyr)
setwd("~/GitHub/2021-1/marketinglabs/Tarea_2")
data_1 <- read.csv('Anime.csv')
data <- read.csv('Anime.csv')
View(data)
